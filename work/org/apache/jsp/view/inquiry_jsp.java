/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-12-06 00:58:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inquiry_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/view/../common/head.jsp", Long.valueOf(1701390492539L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v6.1.2/css/all.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>");
      out.write("\r\n");
      out.write("<title>お問い合わせフォーム</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h1 class=\"my-3\">お問い合わせフォーム</h1>\r\n");
      out.write("\t\t<form action=\"");
      out.print( request.getContextPath() );
      out.write("/inquiry\"  method=\"GET\">\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"email\" class=\"col-sm-2 col-form-label\">メールアドレス <span class=\"text-danger\">*</span></label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<input required type=\"email\" class=\"form-control\" id=\"email\" name=\"email\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"email@example.com\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"name\" class=\"col-sm-2 col-form-label\">名前 <span class=\"text-danger\">*</span></label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<input required type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"神田英語\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"age\" class=\"col-sm-2 col-form-label\">年齢</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<select name=\"age\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"0~9\">0~9</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"10~19\">10~19</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"20~29\">20~29</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"30~39\">30~39</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"40~49\">40~49</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"50~59\">50~59</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"60~69\">60~69</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"70~79\">70~79</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"80~89\">80~89</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"90~\">90~</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"gender\" class=\"col-sm-2 col-form-label\">性別</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"male\" value=\"male\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"form-check-label\" for=\"male\">男</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"female\" value=\"female\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"form-check-label\" for=\"female\">女</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"non-binary\" value=\"non-binary\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"form-check-label\"\r\n");
      out.write("\t\t\t\t\t\t\tfor=\"non-binary\">ノンバイナリー</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"other\" value=\"other\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"form-check-label\" for=\"other\">その他</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"no-answer\" value=\"no-answer\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"form-check-label\" for=\"no-answer\">回答しない</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"address\" class=\"col-sm-2 col-form-label\">住所</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"address\" name=\"address\"\r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"東京都千代田区紺屋町11\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"category\" class=\"col-sm-2 col-form-label\">お問い合わせ項目</label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<select name=\"category\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"1\">料金・お支払いについて</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"2\">講座・コース・教材について</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"3\">学習の進め方について</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"4\">受講期限について</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"5\">受講終了後のサポートについて</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"6\">その他</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row mb-3\">\r\n");
      out.write("\t\t\t\t<label for=\"contents\" class=\"col-sm-2 col-form-label\">お問い合わせ記入欄 <span class=\"text-danger\">*</span></label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t<textarea required class=\"form-control\" id=\"contents\" name=\"contents\" rows=\"3\"></textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-primary\" style=\"float: right\">送信</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
